#!/bin/bash
scriptname=$0
echo ""

OPENFORTIVPN=${OPENFORTIVPN:-$(which openfortivpn)}
[[ $? -eq 1 ]] && OPENFORTIVPN=''

OPENFORTIVPN_WEBVIEW=${OPENFORTIVPN_WEBVIEW:-$(which openfortivpn-webview)}
[[ $? -eq 1 ]] && OPENFORTIVPN_WEBVIEW=''

usage() {
  cat <<EOL
Usage: $scriptname host[:port] [openfortivpn-webview_opts] [-- openfortivpn_opts]

Connect to a Forti VPN Server authenticating with SSO enabled
  host[:port]                   the VPN gateway
  [openfortivpn-webview_opts]   openfortivpn-webview options. List them with:
                                openfortivpn-webview --help
  [-- openfortivpn_opts]        options that will be passed to openfortivpn.
                                For more details, run:
                                openfortivpn --help

If openfortivpn is not in the PATH, use the OPENFORTIVPN variable to pass its location. Example:
   OPENFORTIVPN=/home/user/openfortivpn $scriptname

If openfortivpn-webview is not in the PATH, use the OPENFORTIVPN_WEBVIEW variable to pass its location. Example:
   OPENFORTIVPN_WEBVIEW=/home/user/openfortivpn-webview-1.2.3.AppImage $scriptname

If you needed to use an http proxy to access the vpn gateway:
 - If using the AppImage version of openfortivpn-webview (default):
   $scriptname host[:port] --proxy-server=proxy.example.com:8080 [other_openfortivpn-webview_opts] [-- openfortivpn_opts]
 
 - If you have manually installed the Qt variant of openfortivpn-webview:
   QTWEBENGINE_CHROMIUM_FLAGS="--proxy-server=proxy.example.com:8080" $scriptname host[:port] [openfortivpn-webview_opts] [-- openfortivpn_opts]

Simple usage example:
  $scriptname vpngateway.example.com
EOL
}


##############################################################################
# Check that openfortivpn > 1.19.0 is installed
##############################################################################

compare_versions() {
  local version1=$1
  local version2=$2
  local IFS=.
  local ver1=($version1)
  local ver2=($version2)

  # Compare each segment of the version numbers
  for ((i = 0; i < ${#ver1[@]}; i++)); do
    if [ -z "${ver2[i]}" ]; then
      # If version2 is shorter, consider missing segments as 0
      ver2[i]=0
    fi

    if [ "${ver1[i]}" -gt "${ver2[i]}" ]; then
      return 0 # ver1 is greater than ver2
    else
      return 1 # ver2 is greater or equal
    fi
  done
}

if [[ -z $OPENFORTIVPN ]]; then
  cat <<EOL
ERROR: openfortivpn not found in the system. If it is installed but not in the
       PATH, consider passing its location in the OPENFORTIVPN variable.
       Example:
       OPENFORTIVPN=/home/user/openfortivpn $scriptname
EOL
  echo ""
  usage
  exit 1
fi

if ! [ -x $OPENFORTIVPN ]; then
  echo "ERROR: file does not exist or you do not have permissions to execute it."
  echo "       $OPENFORTIVPN"
  echo ""
  usage
  exit 1
fi

openfortivpn_version=$($OPENFORTIVPN --version)
compare_versions "1.19.0" $openfortivpn_version
if [ $? -eq 0 ]; then
  echo "ERROR: installed openfortivpn version ($openfortivpn_version) is older that required (>1.19.0)."
  distro=$(lsb_release -is)
  if [[ $distro = "Ubuntu" ]]; then
    echo "You may consider manually installing the package of a newer ubuntu from https://packages.ubuntu.com/search?keywords=openfortivpn"
  fi
  echo ""
  echo "In case you have more than one version installed, you may use the OPENFORTIVPN variable to pass another installed openfortivpn."
  echo ""
  usage
  exit 1
fi


##############################################################################
# Check that openfortivpn-webview is installed
##############################################################################

if [[ -z $OPENFORTIVPN_WEBVIEW ]]; then
  cat <<EOL
ERROR: openfortivpn-webview not found in the system.
If not installed, please download and install the latest version from
  https://github.com/gm-vm/openfortivpn-webview/releases/latest

If it is installed but not in the PATH, consider passing its location in the
OPENFORTIVPN_WEBVIEW variable. Example:
  OPENFORTIVPN_WEBVIEW=/home/user/openfortivpn-webview-1.2.3.AppImage $scriptname

EOL
  usage
  exit 1
fi


##############################################################################
# Parse options
##############################################################################

if [ "$#" -eq 0 ]; then
  usage
  exit 0
fi

openfortivpnwebview_opts=()
vpngateway=''

while [ "$#" -gt 0 ]; do
  case "$1" in
  -h | --help)
    usage
    exit 0
    ;;
  *)
    if [ -z $vpngateway ]; then
      if [[ $1 = -* ]]; then
        echo "ERROR: invalid host[:port]"
        echo ""
        usage
        exit 1
      fi
      vpngateway=$1
      shift 1
    elif [ $1 = "--" ]; then
      shift 1
      break
    else
      openfortivpnwebview_opts+=("$1")
      shift 1
    fi
    ;;
  esac
done

##############################################################################
# Run openfortivpn-sso
##############################################################################

if [ $(id -u) -eq 0 ]; then
  echo "For security reasons, this script should not be run as root"
  exit 1
fi

while true; do
  cookie=$($OPENFORTIVPN_WEBVIEW $vpngateway $openfortivpnwebview_opts 2>/dev/null)
  if [ $? -ne 0 ]; then
    # Exit if the browser window has been closed manually.
    exit 0
  fi
  echo $cookie | sudo $OPENFORTIVPN $vpngateway --cookie-on-stdin $@
  if [ $? -eq 0 ]; then
    # Exit if openfortivpn has been closed manually
    exit 0
  fi
done
